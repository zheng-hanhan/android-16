//
// Copyright (C) 2018 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package {
    default_team: "trendy_team_native_tools_libraries",
    default_applicable_licenses: ["system_extras_memory_replay_license"],
}

// Added automatically by a large-scale-change
// See: http://go/android-license-faq
license {
    name: "system_extras_memory_replay_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
    ],
    license_text: [
        "NOTICE",
    ],
}

cc_defaults {
    name: "memory_replay_flag_defaults",

    host_supported: true,

    cflags: [
        "-Wall",
        "-Wextra",
        "-Werror",
    ],
}

cc_defaults {
    name: "memory_replay_defaults",
    defaults: ["memory_replay_flag_defaults"],

    shared_libs: [
        "libbase",
        "liblog",
        "libziparchive",
    ],
}

cc_library_static {
    name: "libmemory_trace",
    host_supported: true,
    defaults: ["memory_replay_flag_defaults"],

    export_include_dirs: ["include"],
    shared_libs: ["libbase"],
    srcs: ["MemoryTrace.cpp"],

    apex_available: [
        "//apex_available:platform",
        "com.android.runtime",
    ],
}

cc_library_static {
    name: "libmemory_replay",
    defaults: ["memory_replay_defaults"],

    srcs: [
        "Alloc.cpp",
        "File.cpp",
        "NativeInfo.cpp",
        "Pointers.cpp",
        "Thread.cpp",
        "Threads.cpp",
    ],

    whole_static_libs: [
        "libmemory_trace",
    ],
}

cc_binary {
    name: "memory_replay",
    defaults: ["memory_replay_defaults"],
    host_supported: true,

    srcs: ["main.cpp"],

    static_libs: [
        "libmemory_replay",
    ],

    compile_multilib: "both",
    multilib: {
        lib32: {
            suffix: "32",
        },
        lib64: {
            suffix: "64",
        },
    },

    target: {
        host: {
            // Keep debug information for host executables.
            strip: {
                none: true,
            },
        },
    },
}

cc_binary_host {
    name: "filter_trace",
    defaults: ["memory_replay_defaults"],

    static_libs: [
        "libmemory_replay",
    ],

    srcs: [
        "FilterTrace.cpp",
    ],
}

cc_binary_host {
    name: "print_trace",
    defaults: ["memory_replay_defaults"],

    static_libs: [
        "libmemory_replay",
    ],

    srcs: [
        "PrintTrace.cpp",
    ],
}

cc_binary_host {
    name: "verify_trace",
    defaults: ["memory_replay_defaults"],

    static_libs: [
        "libmemory_replay",
    ],

    srcs: [
        "VerifyTrace.cpp",
    ],
}

cc_test {
    name: "memory_replay_tests",
    defaults: ["memory_replay_defaults"],
    isolated: true,

    srcs: [
        "tests/FileTest.cpp",
        "tests/MemoryTraceTest.cpp",
        "tests/NativeInfoTest.cpp",
        "tests/PointersTest.cpp",
        "tests/ThreadTest.cpp",
        "tests/ThreadsTest.cpp",
    ],

    local_include_dirs: ["tests"],

    static_libs: [
        "libmemory_replay",
    ],

    data: [
        "tests/test.txt",
        "tests/test.zip",
    ],

    test_suites: ["general-tests"],
}

cc_benchmark {
    name: "trace_benchmark",
    defaults: ["memory_replay_defaults"],

    srcs: [
        "TraceBenchmark.cpp",
    ],

    static_libs: [
        "libmemory_replay",
    ],

    data: [
        "traces/*.zip",
    ],
}
